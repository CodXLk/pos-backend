name: Deploy Spring Boot to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: Run tests
        run: mvn clean test

      - name: Build application
        run: mvn clean package -DskipTests=true

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/pos-system:latest .

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/pos-system:latest

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Stop existing systemd service if running
            sudo systemctl stop pos-system.service || true
            
            # Stop and remove existing container
            sudo docker stop pos-system || true
            sudo docker rm pos-system || true
            
            # Pull latest image
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/pos-system:latest
            
            # Run new container with production profile
            sudo docker run -d \
              --name pos-system \
              --restart unless-stopped \
              -p 8080:8080 \
              -e SPRING_PROFILES_ACTIVE=production \
              -e RDS_HOSTNAME=${{ secrets.RDS_HOSTNAME }} \
              -e RDS_PORT=${{ secrets.RDS_PORT }} \
              -e RDS_DB_NAME=${{ secrets.RDS_DB_NAME }} \
              -e RDS_USERNAME=${{ secrets.RDS_USERNAME }} \
              -e RDS_PASSWORD=${{ secrets.RDS_PASSWORD }} \
              -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
              -e EMAIL_USERNAME=${{ secrets.EMAIL_USERNAME }} \
              -e EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }} \
              ${{ secrets.DOCKER_USERNAME }}/pos-system:latest
            
            # Clean up old images
            sudo docker image prune -f
